<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Support Agent</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f5f5f5;
            margin: 0;
        }

        #chat-container {
            width: 90%;
            max-width: 800px;
            height: 85vh;
            display: flex;
            flex-direction: column;
            background: white;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        #chat-box {
            flex-grow: 1;
            overflow-y: auto;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .message {
            max-width: 100%;
            padding: 10px;
            border-radius: 10px;
            margin: 5px 0;
            font-size: 14px;
        }

        .user {
            align-self: flex-end;
            background: #007bff;
            color: white;
            border-radius: 10px 10px 0 10px;
        }

        .bot {
            align-self: flex-start;
            background: #e5e5e5;
            color: black;
            border-radius: 10px 10px 10px 0;
        }

        #chat-form {
            display: flex;
            padding: 15px;
            border-top: 1px solid #ddd;
            background: white;
            width: 100%;
            box-sizing: border-box;
        }

        #user-input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
            width: 100%;
        }

        #send-button {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            margin-left: 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        #send-button:hover {
            background: #0056b3;
        }

    </style>
</head>
<body>
    <div id="chat-container">
        <div id="chat-box"></div>
        <form id="chat-form">
            <input type="text" id="user-input" placeholder="Describe your issue..." required>
            <button type="submit" id="send-button">Send</button>
        </form>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let previousDescriptions = [];
            let rejectedCategories = [];
            let selectedCategory = "";
            let currentStep = "categorySelection";
            let refinementCount = 0;  

            document.getElementById("chat-form").addEventListener("submit", async function (event) {
                event.preventDefault();
                let userMessage = document.getElementById("user-input").value.trim();
                if (!userMessage) return;

                addMessage(userMessage, "user");
                document.getElementById("user-input").value = "";

                if (currentStep === "categorySelection") {
                    await fetchCategory(userMessage);
                } else if (currentStep === "eliminateCategory") {
                    handleCategoryElimination(userMessage);
                } else if (currentStep === "confirmCategory") {
                    handleCategoryConfirmation(userMessage);
                }
            });

            function addMessage(text, role) {
                const chatBox = document.getElementById("chat-box");
                const messageDiv = document.createElement("div");
                messageDiv.classList.add("message", role);
                messageDiv.innerHTML = text;
                chatBox.appendChild(messageDiv);
                chatBox.scrollTop = chatBox.scrollHeight;
            }

            async function fetchCategory(userMessage) {
                try {
                    const response = await fetch("/api/categorize", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            user_description: userMessage,
                            previous_descriptions: previousDescriptions,
                            rejected_categories: rejectedCategories
                        })
                    });

                    if (!response.ok) throw new Error("Server error");

                    const data = await response.json();

                    if (data.final_category) {
                        selectedCategory = data.final_category;
                        addMessage(`Based on my analysis, it looks like the category of the issue is **${selectedCategory}**. Do you confirm? (Y/N)`, "bot");
                        currentStep = "confirmCategory";
                        return;
                    }

                    refinementCount++;
                    previousDescriptions.push(userMessage);

                    if (refinementCount >= 5) {
                        selectedCategory = data.suggestions[0].category;
                        addMessage(`I've refined the issue enough. The most likely category is **${selectedCategory}**. Do you confirm? (Y/N)`, "bot");
                        currentStep = "confirmCategory";
                        return;
                    }

                    let categoryOptions = data.suggestions.map(s => `- **${s.category}**: ${s.explanation}`).join("<br>");
                    addMessage(`Possible categories:<br>${categoryOptions}`, "bot");
                    addMessage(data.follow_up_question, "bot");
                } catch (error) {
                    console.error("‚ùå Error fetching category:", error);
                    addMessage("Error processing request. Please try again.", "bot");
                }
            }
        });

    </script>    
</body>
</html>
